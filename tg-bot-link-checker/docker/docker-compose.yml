version: "3.8"

services:
  postgres:
    image: postgres:15-alpine
    container_name: scrapper_postgres
    environment:
      POSTGRES_DB: scrapper_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports: ["5432:5432"]
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks: [app-network]

  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports: ["2181:2181"]
    volumes:
      - zookeeper_data:/var/lib/zookeeper
    networks: [app-network]

  kafka:
    image: confluentinc/cp-kafka:7.5.0
    container_name: kafka
    depends_on: [zookeeper]
    ports: ["9092:9092"]
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    volumes:
      - kafka_data:/var/lib/kafka/data
    networks: [app-network]

  redis:
    image: redis:7-alpine
    container_name: redis
    ports: ["6379:6379"]
    volumes:
      - redis_data:/data
    networks: [app-network]

  clickhouse:
    image: clickhouse/clickhouse-server:23.8
    container_name: clickhouse
    ports:
      - "8123:8123"
      - "9000:9000"
    volumes:
      - clickhouse_data:/var/lib/clickhouse
      - ./clickhouse-init:/docker-entrypoint-initdb.d:ro
    healthcheck:
      test: [ "CMD-SHELL", "wget -q --spider http://localhost:8123/ping || exit 1" ]
      interval: 10s
      retries: 5
    networks: [app-network]

  grafana:
    image: tg-bot-link-checker-grafana:${TAG}
    container_name: grafana
    build:
      context: ./docker/grafana
      dockerfile: Dockerfile-grafana
    depends_on: [clickhouse]
    ports: ["3000:3000"]
    environment:
      GF_SECURITY_ADMIN_USER: admin
      GF_SECURITY_ADMIN_PASSWORD: changeme
      GF_USERS_ALLOW_SIGN_UP: "false"
    restart: unless-stopped
    networks: [app-network]

  vector:
    image: timberio/vector:0.47.0-debian
    container_name: vector
    volumes:
      - ./vector/vector.toml:/etc/vector/vector.toml:ro
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - clickhouse
    environment:
      - VECTOR_LOG=debug
    command: [ "--config", "/etc/vector/vector.toml" ]
    networks: [ app-network ]
    restart: unless-stopped

  bot:
    image: tg-bot-link-checker-bot:${TAG}
    container_name: bot
    build:
      context: .
      dockerfile: docker/Dockerfile-bot
    depends_on:
      - postgres
      - kafka
      - redis
    environment:
      SPRING_PROFILES_ACTIVE: prod
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/scrapper_db
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: password
    ports: ["8081:8081"]
    restart: on-failure
    networks: [app-network]

  scrapper:
    image: tg-bot-link-checker-scrapper:${TAG}
    container_name: scrapper
    build:
      context: .
      dockerfile: docker/Dockerfile-scrapper
    depends_on:
      - postgres
      - kafka
      - redis
    environment:
      SPRING_PROFILES_ACTIVE: prod
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/scrapper_db
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: password
    ports: ["8082:8082"]
    restart: on-failure
    networks: [app-network]

volumes:
  postgres_data:
  zookeeper_data:
  kafka_data:
  redis_data:
  clickhouse_data:

networks:
  app-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.28.0.0/16
