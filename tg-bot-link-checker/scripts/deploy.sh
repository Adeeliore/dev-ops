#!/usr/bin/env bash
set -e

usage() {
  echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: $0 -t <tag>"
  echo "  -t <tag>  ‚Äî —Ç–æ—Ç –∂–µ —Ç–µ–≥, –∫–æ—Ç–æ—Ä—ã–π –≤—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª–∏ –≤ build.sh"
  exit 1
}

TAG=""
while getopts "t:" opt; do
  case ${opt} in
    t)
      TAG=${OPTARG}
      ;;
    *)
      usage
      ;;
  esac
done
shift $((OPTIND - 1))

if [[ -z "${TAG}" ]]; then
  echo "‚ùå –û—à–∏–±–∫–∞: –Ω—É–∂–Ω–æ —É–∫–∞–∑–∞—Ç—å —Ç–µ–≥ —á–µ—Ä–µ–∑ -t"
  usage
fi

echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–æ–∫–∞–ª—å–Ω—ã—Ö –æ–±—Ä–∞–∑–æ–≤ —Å —Ç–µ–≥–æ–º ${TAG}"
for image in tg-bot-link-checker-bot:${TAG} tg-bot-link-checker-scrapper:${TAG} tg-bot-link-checker-grafana:${TAG}; do
  if ! docker image inspect "$image" > /dev/null 2>&1; then
    echo "‚ùå –û–±—Ä–∞–∑ $image –Ω–µ –Ω–∞–π–¥–µ–Ω –ª–æ–∫–∞–ª—å–Ω–æ. –ó–∞–ø—É—Å—Ç–∏—Ç–µ build.sh —Å —Ç–µ–≥–æ–º ${TAG}."
    exit 1
  fi
  echo "‚úÖ –û–±—Ä–∞–∑ $image –Ω–∞–π–¥–µ–Ω –ª–æ–∫–∞–ª—å–Ω–æ."
done

echo "üì¶ –ó–∞–≥—Ä—É–∑–∫–∞ –≤–Ω–µ—à–Ω–∏—Ö –æ–±—Ä–∞–∑–æ–≤"
docker pull postgres:15-alpine || { echo "‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ postgres:15-alpine"; exit 1; }
docker pull confluentinc/cp-zookeeper:7.5.0 || { echo "‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ cp-zookeeper"; exit 1; }
docker pull confluentinc/cp-kafka:7.5.0 || { echo "‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ cp-kafka"; exit 1; }
docker pull redis:7-alpine || { echo "‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ redis"; exit 1; }
docker pull clickhouse/clickhouse-server:23.8 || { echo "‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ clickhouse-server"; exit 1; }
docker pull timberio/vector:0.47.0-debian || { echo "‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ vector"; exit 1; }

echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ Vector"
VECTOR_CONFIG="./docker/vector/vector.toml"
if [[ ! -f "$VECTOR_CONFIG" ]]; then
  echo "‚ùå –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π —Ñ–∞–π–ª Vector –Ω–µ –Ω–∞–π–¥–µ–Ω: $VECTOR_CONFIG"
  exit 1
fi

echo "üöÄ –ü–æ–¥–Ω–∏–º–∞–µ–º —Å—Ç–µ–∫ docker-compose —Å —Ç–µ–≥–æ–º –æ–±—Ä–∞–∑–æ–≤ ${TAG}"
export TAG=${TAG}
DEPLOY_DIR="$(cd "$(dirname "$0")/../docker" && pwd)"
cd "$DEPLOY_DIR"

if ! command -v docker-compose &>/dev/null; then
  echo "‚ùå docker-compose –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –µ–≥–æ –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ 'docker compose'."
  exit 1
fi

docker-compose down --remove-orphans
docker-compose up -d --no-build

echo "‚è≥ –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞ ClickHouse..."
until docker exec clickhouse clickhouse-client -q "SELECT 1" > /dev/null 2>&1; do
  echo "‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ ClickHouse..."
  sleep 2
done

echo "üóÇ –í—ã–ø–æ–ª–Ω—è–µ–º SQL-—Å–∫—Ä–∏–ø—Ç —Å–æ–∑–¥–∞–Ω–∏—è –ë–î –∏ —Ç–∞–±–ª–∏—Ü"
docker exec -i clickhouse clickhouse-client --multiquery < ./clickhouse-init/create_logs_table.sql

echo "‚úÖ –í—Å–µ —Å–µ—Ä–≤–∏—Å—ã –∑–∞–ø—É—â–µ–Ω—ã!"
echo "üîó Grafana: http://localhost:3000 (–ª–æ–≥–∏–Ω/–ø–∞—Ä–æ–ª—å admin/changeme)"
